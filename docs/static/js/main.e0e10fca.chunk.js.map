{"version":3,"sources":["components/GradationsList.jsx","variables.js","components/Gradation.jsx","components/GradationStatus.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["m","generateMedia","sm","md","greaterThan","GradationList","styled","ul","GradationsList","props","gradationsProperty","map","value","index","gradationProperty","copyToClipboard","toString","WrapGradation","div","Gradation","style","background","className","id","onClick","type","readOnly","GlobalStyles","createGlobalStyle","reset","App","initGradationProperty","linearDatas","state","dataset","gradation","linear","propertyDatas","push","property","setState","copyIndex","copyId","copyBtnId","document","getElementById","select","execCommand","copyText","children","innerHTML","setTimeout","alert","defaultDataset","bind","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"m1EAMA,IAKMA,EALcC,YAAc,CAChCC,GAAI,QACJC,GAAI,UAGgBC,YAAY,MAE5BC,EAAgBC,IAAOC,GAAV,IAIfP,EAJe,KCZH,UD2BVA,EAfa,KAsBXA,EAtBW,KA8BXA,EA9BW,KAmCbA,EAnCa,MAuDJQ,EAdQ,SAACC,GACtB,OACE,8BACE,cAACJ,EAAD,UACCI,EAAMC,mBAAmBC,KAAI,SAACC,EAAOC,GAAR,OAC5B,6BACE,cAAC,EAAD,CAAWC,kBAAmBF,EAAOC,MAAOA,EAAOE,gBAAiBN,EAAMM,mBADnEF,EAAMG,oB,w+BErDvB,IAKMhB,EALcC,YAAc,CAChCC,GAAI,QACJC,GAAI,UAGgBC,YAAY,MAE5Ba,EAAgBX,IAAOY,IAAV,IAWblB,EAXa,MAuEJmB,EAjBG,SAACV,GACjB,IAAMW,EAAQ,CACZC,WAAW,mBAAD,OAAqBZ,EAAMK,kBAA3B,MAEZ,OACE,cAACG,EAAD,UACE,qBAAKK,UAAU,kBAAkBC,GAAE,0BAAqBd,EAAMI,OAASO,MAAOA,EAA9E,SACE,sBAAKE,UAAU,WAAWC,GAAE,mBAAcd,EAAMI,OAASW,QAAS,kBAAMf,EAAMM,gBAAgBN,EAAMI,QAApG,UACE,cAAC,IAAD,IAAwB,sBAAMS,UAAU,YAAhB,sBACxB,uBAAOC,GAAE,sBAAiBd,EAAMI,OAASS,UAAU,cAAcG,KAAK,OAAOb,MAAK,sBAAiBQ,EAAMC,YAAcK,UAAQ,Y,GCtErHzB,YAAc,CAChCC,GAAI,QACJC,GAAI,UAGgBC,YAAY,M,8dCJlC,IAKMJ,EALcC,YAAc,CAChCC,GAAI,QACJC,GAAI,UAGgBC,YAAY,MAE5BuB,EAAeC,YAAH,IACdC,IAIE7B,EALY,KAaZA,EAbY,MA2BG8B,E,kDACnB,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAQRsB,sBAAwB,WACtB,IAAMC,EAAc,EAAKC,MAAMC,QAAQC,UAAUC,OAC7CC,EAAgB,GACpBL,EAAYrB,KAAI,SAAAC,GAAK,OAAIyB,EAAcC,KAAK1B,EAAM2B,aAElD,EAAKC,SAAS,CACZ9B,mBAAoB2B,KAfL,EAmBnBtB,gBAAkB,SAACF,GACjB,IAAM4B,EAAY5B,EAEZ6B,EAAM,sBAAkBD,GACxBE,EAAS,mBAAeF,GAU9B,GARmBG,SAASC,eAAeH,GAGhCI,SAGCF,SAASG,YAAY,QAEzB,CACN,IAAMC,EAAWJ,SAASC,eAAeF,GAAWM,SAAS,GAC7DD,EAASE,UAAY,SAErBC,YAAW,WACTH,EAASE,UAAY,aACpB,UAEHE,MAAM,+IAvCR,EAAKnB,MAAQ,CACXvB,mBAAoB,GACpBwB,QAASmB,GAEX,EAAKtC,gBAAkB,EAAKA,gBAAgBuC,KAArB,gBANN,E,gEA8CjBC,KAAKxB,0B,+BAIL,OACE,qCACE,cAACJ,EAAD,IACA,cAAC,EAAD,CAAgBjB,mBAAoB6C,KAAKtB,MAAMvB,mBAAoBK,gBAAiBwC,KAAKxC,yB,GAtDhEyC,IAAMC,WC7BxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASC,eAAe,SAM1Ba,M","file":"static/js/main.e0e10fca.chunk.js","sourcesContent":["import React from 'react';\nimport {Gradation} from '.'\nimport styled from 'styled-components';\nimport { generateMedia } from 'styled-media-query';\nimport {scssVariables as v} from '../variables';\n\nconst customMedia = generateMedia({\n  sm: '481px',\n  md: '769px'\n})\n\nconst m = customMedia.greaterThan(\"md\");\n\nconst GradationList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n\n  ${m`\n    grid-template-columns: repeat(3, 1fr);\n  `}\n\n\n  color: ${v.$fontColor};\n  margin: 100px;\n\n  li {\n    margin: 4rem 0 0 0;\n\n    ${m`\n      margin: 40px 20px 0 20px;\n    `}\n\n    &:nth-of-type(3n+1) {\n      margin: 4rem 0 0 0;\n\n      ${m`\n        margin: 40px 20px 0 0;\n      `}\n    }\n\n    &:nth-of-type(3n) {\n      margin: 4rem 0 0 0;\n\n      ${m`\n        margin: 40px 0 0 20px;\n      `}\n    }\n\n    ${m`\n      // width: 100%;\n    `}\n  }\n`\n\nconst GradationsList = (props) => {\n  return(\n    <div>\n      <GradationList>\n      {props.gradationsProperty.map((value, index) =>\n        <li key={index.toString()} >\n          <Gradation gradationProperty={value} index={index} copyToClipboard={props.copyToClipboard} />\n        </li>\n      )}\n      </GradationList>\n    </div>\n  )\n}\n\nexport default GradationsList;\n","export const scssVariables = {\n  \"$fontColor\": \"#333333\"\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { generateMedia } from 'styled-media-query';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\n// import {GradationStatus} from '.';\n\nconst customMedia = generateMedia({\n  sm: '481px',\n  md: '769px'\n})\n\nconst m = customMedia.greaterThan(\"md\");\n\nconst WrapGradation = styled.div`\n  position: relative;\n  width: 100%;\n\n  .gradation-color {\n    align-items: center;\n    border-radius: .6rem;\n    display: flex;\n    height: 25rem;\n    justify-content: center;\n\n    ${m`\n      border-radius: 14px;\n      height: 250px;\n    `}\n\n    &:hover {\n\n      .copy-btn {\n        opacity: 1;\n      }\n    }\n  } // .gradation-color\n\n  .copy-btn {\n    align-items: center;\n    color: #fff;\n    cursor: pointer;\n    display: flex;\n    font-size: 18px;\n    justify-content: center;\n    opacity: 0;\n    transition: all .1s linear;\n\n    &:hover {\n\n      .copy-text {\n        text-shadow: 1px 1px 4px rgba(0, 0, 0, .3);\n      }\n    }\n  } // .copy-btn\n\n  .copy-text {\n    margin: 0 0 0 5px;\n    transition: all .1s linear;\n  }\n\n  .copy-target{\n    opacity: 0;\n    position: absolute;\n    top: 0;\n  }\n`\n\nconst Gradation = (props) => {\n  const style = {\n    background: `linear-gradient(${props.gradationProperty})`\n  };\n  return(\n    <WrapGradation>\n      <div className=\"gradation-color\" id={`gradation-color-${props.index}`} style={style}>\n        <div className=\"copy-btn\" id={`copy-btn-${props.index}`} onClick={() => props.copyToClipboard(props.index)}>\n          <FileCopyOutlinedIcon /><span className=\"copy-text\">CSS COPY</span>\n          <input id={`copy-target-${props.index}`} className=\"copy-target\" type=\"text\" value={`background: ${style.background}`} readOnly></input>\n        </div>\n      </div>\n      {/* <GradationStatus /> */}\n    </WrapGradation>\n  )\n}\n\nexport default Gradation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { generateMedia } from 'styled-media-query';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst customMedia = generateMedia({\n  sm: '481px',\n  md: '769px'\n})\n\nconst m = customMedia.greaterThan(\"md\");\n\nconst GradationStatus = () => {\n  return(\n    <div>\n      ステータス\n    </div>\n  )\n}\n\nexport default GradationStatus;\n\n\n","import React from 'react';\nimport reset from 'react-style-reset/string';\nimport { createGlobalStyle } from 'styled-components';\nimport { generateMedia } from 'styled-media-query';\nimport {GradationsList} from './components';\nimport defaultDataset from './dataset.json';\n\nconst customMedia = generateMedia({\n  sm: '481px',\n  md: '769px'\n})\n\nconst m = customMedia.greaterThan('md');\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset};\n  html {\n    font-size: 62.5%;\n\n    ${m`\n      font-size: 100%;\n    `}\n  }\n\n  body {\n    font-size: 10px;\n\n    ${m`\n      font-size: 16px;\n    `}\n  }\n\n  #root {\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n  }\n\n\n`;\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      gradationsProperty: [],\n      dataset: defaultDataset\n    }\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  initGradationProperty = () => {\n    const linearDatas = this.state.dataset.gradation.linear;\n    let propertyDatas = [];\n    linearDatas.map(value => propertyDatas.push(value.property));\n\n    this.setState({\n      gradationsProperty: propertyDatas\n    })\n  }\n\n  copyToClipboard = (index) => {\n    const copyIndex = index;\n    // コピー対象をJavaScript上で変数として定義する\n    const copyId = `copy-target-${copyIndex}`;\n    const copyBtnId = `copy-btn-${copyIndex}`;\n    // const gradationId = `gradation-color-${copyIndex}`;\n    const copyTarget = document.getElementById(copyId);\n\n    // コピー対象のテキストを選択する\n    copyTarget.select();\n\n    // 選択しているテキストをクリップボードにコピーする\n    const res = document.execCommand(\"Copy\");\n\n    if(res) {\n      const copyText = document.getElementById(copyBtnId).children[1];\n      copyText.innerHTML = 'COPIED';\n      // const copyText = document.getElementById(gradationId).querySelector('.copy-text');\n      setTimeout(() => {\n        copyText.innerHTML = 'CSS COPY';\n      }, 500)\n    }else {\n      alert(\"コピーに失敗しました。もう一度お試しください。\");\n    }\n  }\n\n  componentDidMount() {\n    this.initGradationProperty();\n  }\n\n  render() {\n    return(\n      <>\n        <GlobalStyles />\n        <GradationsList gradationsProperty={this.state.gradationsProperty} copyToClipboard={this.copyToClipboard} />\n      </>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}